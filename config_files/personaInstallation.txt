1- export users and privileges from activatecode mysql 


https://stackoverflow.com/questions/23519797/how-to-export-import-existing-user-with-its-privileges

pt-show-grants --only test_user


2- copy mysql configration from activatecode (existed in this file)

3- preaper mysql clustering configration for the two cluster (existed in this file) by changing ip nad id

4- clear databases from server1 mysql, 
  -stop nginx on activatecode
   -systemctl stop nginx


5- stop mysql server from activate code
	- systemctl stop mysql
	

6- backup mysql
	- mysqldump -u root -p smsdb  --routines > smsdb_All.sql

(restore it on server1 mysql cluster and change the configuration of php to connect to it)

7- remove mysql 

apt purge mysql-common
sudo apt-get remove mysql-community-client-plugins
apt --fix-broken install
apt clean
apt autoclean
apt autoremove
apt --fix-broken install
apt purge mysql*
apt purge percona-*
apt purge percona-*
apt --fix-broken install
sudo apt-get clean
sudo apt-get update

8- install percona
    https://docs.percona.com/percona-xtradb-cluster/8.0/apt.html#install-from-repository

9- copy the configurations and connect the two cluster (copy from this file to activecode)


10- restore databases and users on one node.

CREATE USER IF NOT EXISTS `mixsimverify`@`%`;
ALTER USER `mixsimverify`@`%` IDENTIFIED WITH 'caching_sha2_password' AS '$A$005$       !\"@
(yN1k0L!VDe3brhMyWHA.XZ4PmX9KD4zk22SRjkrPSK1G2Sggfv4' REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK PASSWORD HISTORY DEFAULT PASSWORD REUSE INTERVAL DEFAULT PASSWORD REQUIRE CURRENT DEFAULT;
GRANT ALL PRIVILEGES ON `smsdb`.* TO `mixsimverify`@`%`;
GRANT USAGE ON *.* TO `mixsimverify`@`%`;
ALTER USER 'mixsimverify'@'%' IDENTIFIED BY 'mix@123123';

CREATE USER IF NOT EXISTS `phpmyadmin2`@`%`;
ALTER USER `phpmyadmin2`@`%` IDENTIFIED WITH 'caching_sha2_password' AS '$A$005$)b&MH1y0,inl%C:\nt8PPnbZf0H0Y5ajqqvXMGw2VYgUlev0TKd9nc2SlHfv4' REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK PASSWORD HISTORY DEFAULT PASSWORD REUSE INTERVAL DEFAULT PASSWORD REQUIRE CURRENT DEFAULT;
GRANT ALL PRIVILEGES ON `smsdb`.* TO `phpmyadmin2`@`%`;
GRANT ALTER, ALTER ROUTINE, CREATE, CREATE ROLE, CREATE ROUTINE, CREATE TABLESPACE, CREATE TEMPORARY TABLES, CREATE USER, CREATE VIEW, DELETE, DROP, DROP ROLE, EVENT, EXECUTE, FILE, INDEX, INSERT, LOCK TABLES, PROCESS, REFERENCES, RELOAD, REPLICATION CLIENT, REPLICATION SLAVE, SELECT, SHOW DATABASES, SHOW VIEW, SHUTDOWN, SUPER, TRIGGER, UPDATE ON *.* TO `phpmyadmin2`@`%` WITH GRANT OPTION;
GRANT APPLICATION_PASSWORD_ADMIN,AUDIT_ABORT_EXEMPT,AUDIT_ADMIN,AUTHENTICATION_POLICY_ADMIN,BACKUP_ADMIN,BINLOG_ADMIN,BINLOG_ENCRYPTION_ADMIN,CLONE_ADMIN,CONNECTION_ADMIN,ENCRYPTION_KEY_ADMIN,FIREWALL_EXEMPT,FLUSH_OPTIMIZER_COSTS,FLUSH_STATUS,FLUSH_TABLES,FLUSH_USER_RESOURCES,GROUP_REPLICATION_ADMIN,GROUP_REPLICATION_STREAM,INNODB_REDO_LOG_ARCHIVE,INNODB_REDO_LOG_ENABLE,PASSWORDLESS_USER_ADMIN,PERSIST_RO_VARIABLES_ADMIN,REPLICATION_APPLIER,REPLICATION_SLAVE_ADMIN,RESOURCE_GROUP_ADMIN,RESOURCE_GROUP_USER,ROLE_ADMIN,SENSITIVE_VARIABLES_OBSERVER,SERVICE_CONNECTION_ADMIN,SESSION_VARIABLES_ADMIN,SET_USER_ID,SHOW_ROUTINE,SYSTEM_USER,SYSTEM_VARIABLES_ADMIN,TABLE_ENCRYPTION_ADMIN,TELEMETRY_LOG_ADMIN,XA_RECOVER_ADMIN ON *.* TO `phpmyadmin2`@`%` WITH GRANT OPTION;

ALTER USER 'phpmyadmin2'@'%' IDENTIFIED BY 'P@tchP@1234';


CREATE DATABASE smsdb
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_bin;


mysql -u root -p -e "SET GLOBAL log_bin_trust_function_creators = 1;"

mysql -u root -p smsdb < smsdb_All.sql


11- change php pdo port to harpoxy on the two server



12- change nginx ports for activatecode


13- start nginx

	systemctl start nginx


14- setup nginx loadbalancer on activate code.


docker run -d \
  --name nginx-balancer \
  -p 80:80 \
  -p 443:443 \
  -v /root/docker/nginx:/etc/nginx \
  nginx:latest

15- check all if running good.







https://docs.percona.com/percona-xtradb-cluster/8.0/apt.html#install-from-repository

mysqldump -u root -p smsdb  --routines > smsdb_server1.sql
systemctl stop mysql
apt purge mysql-server
#sudo apt install -y percona-xtradb-cluster
apt autoremove
apt purge mysql-common
sudo apt-get remove mysql-community-client-plugins
apt --fix-broken install
apt clean
apt autoclean
apt autoremove
apt --fix-broken install
apt purge mysql*
apt purge percona-*
apt purge percona-*
apt --fix-broken install
sudo apt-get clean
sudo apt-get update
apt install --reinstall percona-xtradb-cluster-server
apt-get -f install
percona-release
percona-release disable pxc80
percona-release disable px-c80
percona-release disable pxc-80
apt update
apt install foo
apt install nmap
apt --fix-broken install
ls
apt update
apt install nmap
apt autoremove
apt update
percona-release setup pxc80
sudo apt install -y percona-xtradb-cluster
netstast -netlp
netstat -netlp
systemctl status mysql
nano /etc/mysql/mysql.conf.d/mysqld.cnf
mysql -u root -p
systemctl stop mysql
systemctl disable mysql
systemctl status mysql.service
systemctl restart  mysql.service
netstat -netlp
history



CREATE DATABASE smsdb
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_bin;

set global pxc_strict_mode=PERMISSIVE;
SET GLOBAL log_bin_trust_function_creators = 1;

mysql -u root -p smsdb < smsdb_server1.sql

set global pxc_strict_mode=ENFORCING;










## rejoin cluster if one of them failer by start boostrap then mysql after deleting all data in  rm -rf /var/lib/mysql/*


-----------------------------------------------------------------------------------------------------------

[mysqld]
######## START General settings ###############

# General settings
user = mysql
pid-file = /var/run/mysqld/mysqld.pid
socket = /var/run/mysqld/mysqld.sock
mysqlx_socket=/tmp/xplugin.sock
port = 3306
basedir = /usr
datadir = /var/lib/mysql
tmpdir = /tmp
lc-messages-dir = /usr/share/mysql
bind-address   = 192.168.100.2
#bind-address  = 127.0.0.1
log-error-verbosity=3
innodb_redo_log_capacity=2147483648
character-set-server  = utf8mb4
collation-server      = utf8mb4_general_ci


auto_increment_increment = 5  # Increment value
auto_increment_offset = 2  # Offset for each node



############################## END General settings ##############################



############################## START wsrep ##############################
#-
server-id=2
# Path to Galera library
#-
wsrep_provider=/usr/lib/galera4/libgalera_smm.so
# Cluster connection URL contains IPs of nodes
#If no IP is found, this implies that a new cluster needs to be created,
#in order to do that you need to bootstrap this node
#-
wsrep_cluster_address=gcomm://192.168.100.2,192.168.100.1

# In order for Galera to work correctly binlog format should be ROW
#-
binlog_format=ROW

# Slave thread to use
#-
wsrep_slave_threads=8
#-
wsrep_log_conflicts

# This changes how InnoDB autoincrement locks are managed and is a requirement for Galera
#-
innodb_autoinc_lock_mode=2

# Node IP address
#-
wsrep_node_address=192.168.100.2

# Cluster name
#-
wsrep_cluster_name=pxc-cluster

#If wsrep_node_name is not specified,  then system hostname will be used
#-
wsrep_node_name=pxc-cluster-node-2

#pxc_strict_mode allowed values: DISABLED,PERMISSIVE,ENFORCING,MASTER
#-
pxc_strict_mode=ENFORCING

# SST method
#-
wsrep_sst_method=xtrabackup-v2
#-
pxc_encrypt_cluster_traffic = OFF

############################## END wsrep ##############################

# Number of CPU cores
innodb_read_io_threads = 16
innodb_write_io_threads = 16
innodb_thread_concurrency = 16
#innodb_force_recovery = 1
# Number of threads
innodb_purge_threads = 4
#innodb_page_cleaner_threads = 4
innodb_page_cleaners = 4
#innodb_log_writer_threads = 4
innodb_log_write_ahead_size=4

#innodb_merge_threads = 4
thread_cache_size = 64
#thread_handling = pool-of-threads
thread_handling = one-thread-per-connection

# Buffer pool size (assuming 128GB RAM)
innodb_buffer_pool_size = 100G


# Storage device type
innodb_io_capacity = 1500 # Adjust for NVMe SSD
innodb_io_capacity_max = 3000 # Adjust for NVMe SSD


############################## START Performance settings ##############################

default_storage_engine = InnoDB
#query_cache_type = 0
#query_cache_size = 0
key_buffer_size = 256M
#innodb_buffer_pool_size = 64G
innodb_buffer_pool_instances = 16
innodb_flush_log_at_trx_commit = 2
innodb_log_buffer_size = 16M
#innodb_log_file_size = 1G
innodb_flush_method = O_DIRECT
#innodb_io_capacity = 2000
#innodb_io_capacity_max = 4000
#innodb_thread_concurrency = 0
#innodb_read_io_threads = 64
#innodb_write_io_threads = 64
innodb_max_dirty_pages_pct = 90
innodb_flush_neighbors = 0
innodb_lru_scan_depth = 4096
#innodb_page_cleaners = 4
#innodb_purge_threads = 4
innodb_change_buffer_max_size = 50
innodb_adaptive_hash_index = 0
innodb_doublewrite = 0
innodb_flush_sync = 0
innodb_max_undo_log_size = 2G
#innodb_undo_logs = 128
#innodb_undo_tablespaces = 127
innodb_use_native_aio = 0
innodb_undo_log_truncate = ON
#innodb_undo_directory = /var/lib/mysql/undo/

############################## END Performance settings ##############################


############################## Start Connection setting ##############################

# Connection settings
max_connections = 3000
max_allowed_packet = 256M
wait_timeout = 600
interactive_timeout = 600

############################## END Connection setting ##############################

############################## START Logging settings ##############################



log_error = /var/log/mysql/error.log
slow_query_log = 1
slow_query_log_file = /var/log/mysql/slow.log
long_query_time = 5
log_queries_not_using_indexes = 1
log_slow_admin_statements = 1
#log_slow_slave_statements = 1
log_slow_replica_statements = 1

############################## END Logging settings ##############################


----------------------------------------------------------------------------------------------------------------------------
